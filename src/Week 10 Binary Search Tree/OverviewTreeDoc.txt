1. Cấu trúc dữ liệu cây là gì?
Cấu trúc dữ liệu cây là một cấu trúc biểu diễn các Node dưới dạng cây. Như các bạn đã học ở môn lập trình C/C++ thì khi chúng ta muốn lưu các phần tử, ta có thể lưu chúng dưới dạng mảng một chiều. Hoặc có thể lưu dưới dạng một danh sách liên kết. Tương tự như vậy các bạn cũng có thể lưu dưới dạng cây nhị phân.
Ưu điểm của cấy trúc dữ liệu cây so với các cấu trúc khác là:
Phân cấp dữ liệu.
Tìm kiếm dễ dàng hơn.
Thao tác trên các danh sách dữ liệu đã sắp xếp.
Trong cấu trúc dữ liệu cây, có hai cấu trúc chính đó là cấu trúc cây nhị phân và cấu trúc cây nhị phân tìm kiếm. Sau đây chúng ta sẽ tìm hiểu qua về hai cấu trúc dữ liệu này nhé.

2. Cây nhị phân (Binary tree)
Cây nhị phân là một cấu trúc dữ liệu được sử dụng cho mục đích lưu trữ dữ liệu. Một cây nhị phân bao gồm các Node và mỗi Node bao gồm 3 thành phần:
Data: Giá trị của một phần tử
Left pointer: Con trỏ trỏ đến cây nhị phân bên trái Node.
Right pointer: Con trỏ trỏ đến cây nhị phân bên phải Node.



Các thành phần cơ bản của cây nhị phân bao gồm:
Root: Được gọi là Node gốc của cây (là một Node cha), một cây chỉ có một Node gốc duy nhất và nó không có Node cha nào.
Parent Node: Là Node cha của một Node cụ thể nào đó.
Child Node: Là Node con của một Node cụ thể nào đó.
Sub-tree: Là cây con biểu diển các con của một Node.
LeafNode: Là Node không có Node con.
Siblings: Các Node có cùng một cha.
Internal Node: Node có ít nhất một Node con.
External Node: Node không có Node con nào.

3. Cây nhị phân tìm kiếm (Binary search tree)
Cây nhị phân tìm kiếm là một dạng đặc biệt của cây nhị phân. Về cơ bản nó có đủ tất cả các thành phần của cây nhị phân. Nhưng tất cả các Node của nó đều có chung một đặc điểm sau:

Cây con bên trái của một Node luôn luôn có giá trị nhỏ hơn hoặc bằng giá trị của Node cha phía trên nó.
Cây con bên phải của một Node luôn luôn có giá trị lớn hơn hoặc bằng giá trị của Node cha phía trên nó.